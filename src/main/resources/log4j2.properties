status=info
name=properties_configuration

# Give directory path where log files should get stored
property.basePath=./.log/

# ConsoleAppender will print logs on console
appender.console.type=Console
appender.console.name=consoleLogger
appender.console.target=SYSTEM_OUT
appender.console.layout.type=PatternLayout
# Specify the pattern of the logs
appender.console.layout.pattern=%black{%d{ISO8601}} %magenta{%-5level} --- [%black{%t}] %blue{%C{1.}:%L}: %msg%n%throwable

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type=RollingFile
appender.rolling.name=fileLogger
appender.rolling.fileName=${basePath}app.log
appender.rolling.filePattern=${basePath}app_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type=PatternLayout
appender.rolling.layout.pattern=%d %p %C{1.}:%L [%t]  - %msg%n%throwable
appender.rolling.policies.type=Policies

# Configure external library logging level
logger.spring.name=org.springframework
logger.spring.level=info
logger.hibernate.name=org.hibernate
logger.hibernate.level=info

# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level=info
rootLogger.additivity=false
rootLogger.appenderRef.rolling.ref=fileLogger
rootLogger.appenderRef.console.ref=consoleLogger